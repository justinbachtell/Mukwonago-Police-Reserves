name: Checkly

on:
  deployment_status:
  push:
    branches: [main, dev]

env:
  CHECKLY_API_KEY: ${{ secrets.CHECKLY_API_KEY }}
  CHECKLY_ACCOUNT_ID: ${{ secrets.CHECKLY_ACCOUNT_ID }}
  CHECKLY_TEST_ENVIRONMENT: ${{ github.event_name == 'deployment_status' && github.event.deployment_status.environment || 'Production' }}

jobs:
  test-e2e:
    # Temporarily disabled - remove the following line to re-enable E2E tests
    if: false # ${{ false }}

    strategy:
      matrix:
        node-version: [20.x]

    name: Test E2E on Checkly
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'deployment_status' && github.event.deployment_status.deployment.ref || github.ref }}
          fetch-depth: 0

      - name: Set branch name
        run: |
          if [ "${{ github.event_name }}" = "deployment_status" ]; then
            echo "CHECKLY_TEST_REPO_BRANCH=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | sed 's/^ //' | grep -e 'origin/' | head -1 | sed 's/\origin\///g')" >> $GITHUB_ENV
          else
            echo "CHECKLY_TEST_REPO_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Restore or cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run checks
        id: run-checks
        run: npx checkly test --reporter=github --record
        env:
          VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}
          ENVIRONMENT_URL: ${{ github.event_name == 'deployment_status' && github.event.deployment_status.environment_url || format('https://{0}', 'mukwonago-police-reserves.vercel.app') }}

      - name: Create summary
        id: create-summary
        if: always()
        run: |
          if [ -f checkly-github-report.md ]; then
            cat checkly-github-report.md > $GITHUB_STEP_SUMMARY
          else
            echo "No test report was generated" > $GITHUB_STEP_SUMMARY
          fi

      - name: Deploy checks
        id: deploy-checks
        if: steps.run-checks.outcome == 'success' && (github.event_name == 'push' || github.event.deployment_status.environment == 'Production')
        run: npx checkly deploy --force
